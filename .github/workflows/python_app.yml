name: FastAPI Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend-app
    env:
      FASTAPI_SECRET_KEY: ${{secrets.FASTAPI_SECRET_KEY}}
      FASTAPI_HASH_ALGORITHM: ${{secrets.FASTAPI_HASH_ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      USER_DB_URL: ${{secrets.USER_DB_URL}}
      FILE_DB_URL: ${{secrets.FILE_DB_URL}}
      
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry==1.8.3
        if [ -f pyproject.toml ]; then poetry install
        elif [ -f requirements.txt ]; then pip install -r requirements.txt; 
        fi
    - name: Lint with flake8
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Black check
      run: |
         poetry run black --check app/
         enforce:
           always:
    - name: Test with pytest
      run: |
        # Test backend
         poetry run coverage run --source=app -m pytest tests
         poetry run coverage report -m


